variables:
  proxy_host: pio.service.consul
  proxy_port: 3128
  http_proxy: http://${proxy_host}:${proxy_port}
  https_proxy: http://${proxy_host}:${proxy_port}
  no_proxy: localhost,.pi2.minint.fr,169.254.169.254
  GIT_SSL_NO_VERIFY: "true"
  TF_CLI_ARGS_plan: -lock-timeout=60s
  TF_CLI_ARGS_apply: -lock-timeout=60s
  TF_CLI_ARGS_destroy: -lock-timeout=60s
  TERRAFORM_IMAGE_VERSION: 1.4.2

default:
  tags:
    - region2
    - shared

.install_dependencies:
  before_script:
    - curl -L https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip -o terraform.zip
    - unzip terraform.zip && chmod +x terraform
    - mkdir ~/.local/ && cp terraform ~/.local/
    - terraform version
    - cp /path/too/mycorp.rootca.pem /usr/local/share/ca-certificates
    - update-ca-certificates

stages:
  - check
  - test
  - plan
  - deploy

format:
  stage: check
  image:
    name: hashicorp/terraform:${TERRAFORM_IMAGE_VERSION}
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  script:
    - terraform fmt -check -recursive -write=false -diff

terraform-plan:
  stage: plan
  script:
    - cd terraform
    - terraform init -backend-config=./configurations/$$.tfvars
    - terraform plan -var-file=./configurations/$$.tfvars -out=infra-openstack.tfplan
  artifacts:
    paths:
      - terraform/infra-openstack.tfplan
    expire_in: 24 hour

terraform-apply:
  stage: deploy
  script:
    - cd terraform
    - terraform init -backend-config=./configurations/$$.tfvars
    - terraform apply
  needs:
    - terraform-plan
  when: manual
  only:
    - main